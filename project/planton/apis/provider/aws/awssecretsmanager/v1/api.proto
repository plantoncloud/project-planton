syntax = "proto3";

package project.planton.apis.provider.aws.awssecretsmanager;

import "buf/validate/validate.proto";
import "project/planton/apis/provider/aws/awssecretsmanager/v1/spec.proto";
import "project/planton/apis/provider/aws/awssecretsmanager/v1/stack_outputs.proto";
import "project/planton/apis/shared/shared.proto";

//aws-secrets-manager
message AwsSecretsManager {
  option (project.planton.apis.shared.options.apiresourcemessageoptions.resource_kind) = aws_secrets_manager;
  option (project.planton.apis.shared.options.apiresourcemessageoptions.owner).resource_kind = environment;
  option (project.planton.apis.shared.options.apiresourcemessageoptions.owner).id_field_path = "spec.environment_info.env_id";

  //api-version
  string api_version = 1 [
    (buf.validate.field).string.const = 'aws.project.planton/v1'
  ];

  //resource-kind
  string kind = 2;

  //metadata
  project.planton.apis.shared.ApiResourceMetadata metadata = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Only lowercase letters, numbers, and hyphens are allowed",
      // https://regex101.com/r/NKTohE/1
      expression: "this.name.matches('^[a-z0-9-]+$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must start with a lowercase letter",
      // https://regex101.com/r/qpK7XF/1
      expression: "this.name.matches('^[a-z].*$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must not end with a hyphen",
      // https://regex101.com/r/reQjcB/1
      expression: "this.name.matches('[^-]$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must be between 1 and 30 characters long",
      expression: "size(this.name) > 0 && size(this.name) <= 30"
    },
    (buf.validate.field).cel = {
      id: "metadata.version.message",
      message: "Version message is mandatory and cannot be empty",
      expression: "has(this.version.message)"
    }
  ];

  //spec
  AwsSecretsManagerSpec spec = 4 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "spec.aws_credential_id",
      message: "AWS Credential Id is mandatory",
      expression: "has(this.aws_credential_id)"
    }
  ];

  //status
  AwsSecretsManagerStatus status = 5;
}

//aws-secrets-manager status
message AwsSecretsManagerStatus {
  //lifecycle
  project.planton.apis.shared.ApiResourceLifecycle lifecycle = 99;

  //audit-info
  project.planton.apis.shared.ApiResourceAudit audit = 98;

  //stack-job id
  string stack_job_id = 97;

  //stack-outputs
  AwsSecretsManagerStackOutputs stack_outputs = 1;
}
