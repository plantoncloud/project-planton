syntax = "proto3";

package project.planton.apis.shared.kubernetes;

import "buf/validate/validate.proto";

//sidecar object in microservice deployment configuration
//this spec should always match the specification of a kubernetes container spec https://pkg.go.dev/k8s.io/api/core/v1#Container
//warning: sidecar feature does not currently support all features of a kubernetes container spec.
message Container {
  // name of the container
  string name = 1;
  // container image
  string image = 2;
  // container ports
  repeated  ContainerPort ports = 3;
  // container resources
  ContainerResources resources = 4;
  // container environment variables
  repeated ContainerEnvVar env = 5;
}

// container cpu and memory resources
message ContainerResources {
  // container resource limits
  // key is either cpu or memory and value is the limits value for the resource
  CpuMemory limits = 1;
  // container resource limits
  // key is either cpu or memory and value is the requests value for the resource
  CpuMemory requests = 2;
}

// container env var
message ContainerEnvVar {
  // name of the environment variable
  string name = 1;
  // value of the environment variable
  string value = 2;
}

// container port
message ContainerPort {
  // port name
  string name = 1;
  // container port
  //the attribute names must use camel case to marshal into https://pkg.go.dev/k8s.io/api/core/v1#Container
  int32 containerPort = 2;
  // container port protocol
  string protocol = 3;
}

// container cpu and memory
message CpuMemory {
  // container cpu
  string cpu = 1;
  // container memory
  string memory = 2;
}

// container image
message ContainerImage {
  // image repository
  string repo = 1;
  // image tag
  string tag = 2;
  //image pull secret name
  string pull_secret_name = 3;
}

//ingress spec of planton cloud api resource to be deployed in kubernetes
message IngressSpec {
  option (buf.validate.message).cel = {
    id: "ingres.enabled.endpoint_domain_name.mandatory",
    expression: "this.is_enabled && size(this.endpoint_domain_name) == 0"
        "? 'endpoint domain name is mandatory to enable ingress'"
        ": ''"
  };
  //toggle to control ingress
  bool is_enabled = 1;
  //endpoint domain to be used for creating internal and external endpoints for planton cloud api resource.
  string endpoint_domain_name = 2;
}

//wrapper for kubernetes secret name and key
message KubernetesSecretKey {
  //name of the kubernetes secret
  string name = 1;
  //key with in the kubernetes secret
  string key = 2;
}
