syntax = "proto3";

package project.planton.apis.credential.dockercredential.v1;

import "buf/validate/validate.proto";
import "project/planton/apis/credential/dockercredential/v1/enum.proto";
import "project/planton/apis/shared/shared.proto";

//docker-credential spec
message DockerCredentialSpec {
  //environment-info
  project.planton.apis.shared.ApiResourceEnvironmentInfo environment_info = 99;

  //docker repo provider
  DockerRepoProvider docker_repo_provider = 1;

  //credentials for docker repo on gcp-artifact-registry
  DockerCredentialGcpArtifactRegistry gcp_artifact_registry = 2;
}

//docker-credential spec for docker-repo provided by gcp-artifact-registry
message DockerCredentialGcpArtifactRegistry {
  //id of the gcp project in which the docker-repo is created.
  string gcp_project_id = 1;
  //gcp region in which the docker-repo is created.
  //this is required for constructing the registry hostname.
  string gcp_region = 2;
  //hostname of the docker-repository on gcp artifact-registry.
  string docker_repo_hostname = 3;
  //base64 encoded google service account key that has required permissions for downloading docker images from the repo.
  string gcp_service_account_key_base64 = 4;
}
